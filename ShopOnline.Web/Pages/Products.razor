@page "/"
@inherits ProductsBase

@if(Products is null && ErrorMessage == null)
{
    <DisplaySpinner></DisplaySpinner>
}
else if (ErrorMessage != null)
{
    <DisplayError ErrorMessage="@ErrorMessage"></DisplayError>
}
else
{
    <h3 class="mb-5">Products</h3>

    var productCount = Products.Count();

    @if (productCount > 0)
    {
        // alla produkter visas i en lista
        @* const int itemsPerRow = 4;
        var productRowList = new List<ProductDTO>();

        @for (int i = 0; i < productCount; i++)
        {
            productRowList = Products.Skip(i * itemsPerRow).Take(itemsPerRow).ToList(); 
        
            <div class="row mt-3">
            
                <DisplayProducts Products="@prodGroup"></DisplayProducts>

            </div>
         }*@
        
        // produkterna sorteras efter kategori            

        @foreach (var prodGroup in GetGroupedProductsByCategory())
        {
            <h4>@GetCategoryName(prodGroup)</h4>

            <div class="row mt-3">
                <DisplayProducts Products="@prodGroup.Take(4)"></DisplayProducts> @*visar endast upp fyra produkter*@
            </div>
            <hr class="mb-3"/>
        }            
    }
}